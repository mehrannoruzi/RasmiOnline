@model SignUpModel
@{
    ViewBag.Title = "_SignUp";
    Layout = null;
}

<div class="form-block sign-up-form @(ViewBag.ActiveBlock=="signup"?"active":"")" id="signup-form">
    <form class="oauth-form @(ViewBag.ActiveBlock=="signup"?"active":"")" action="@Url.Action(MVC.OAuth.ActionNames.SignUp)">
        <div class="group alertw-full" dir="rtl">
            <small></small>
        </div>
        <div class="wrap-input100 validate-input" data-validate="Username is required">
            <div class="text-right input-title">
                @Html.DisplayNameFor(x => x.FirstName)
            </div>
            @Html.TextBoxFor(x => x.FirstName, new { @class = "input100 rtl-elm" })

        </div>
        <div class="w-full">
            <small>@Html.ValidationMessageFor(x => x.FirstName)</small>
        </div>

        <div class="wrap-input100 validate-input" data-validate="Username is required">
            <div class="text-right input-title">
                @Html.DisplayNameFor(x => x.LastName)
            </div>
            @Html.TextBoxFor(x => x.LastName, new { @class = "input100 rtl-elm" })

        </div>
        <div class="w-full">
            <small>@Html.ValidationMessageFor(x => x.LastName)</small>
        </div>

        <div class="wrap-input100 validate-input" data-validate="Username is required">
            <div class="text-right input-title rtl-elm">
                @Html.DisplayNameFor(x => x.Email)
            </div>
            @Html.TextBoxFor(x => x.Email, new { @class = "input100 p-h-r" })

        </div>
        <div class="w-full">
            <small>@Html.ValidationMessageFor(x => x.Email)</small>
        </div>

        <div class="wrap-input100 validate-input" data-validate="Username is required">
            <div class="text-right input-title">
                @Html.DisplayNameFor(x => x.MobileNumber)
            </div>
            @Html.TextBoxFor(x => x.MobileNumber, new { @class = "input100 p-h-r" })

        </div>
        <div class="w-full">
            <small>@Html.ValidationMessageFor(x => x.MobileNumber)</small>
        </div>

        <div class="wrap-input100 validate-input" data-validate="Username is required">
            <div class="text-right input-title">
                @Html.DisplayNameFor(x => x.SignUpPassword) 
            </div>
            @Html.PasswordFor(x => x.SignUpPassword, new { @class = "input100 p-h-r" })

        </div>
        <div class="w-full">
            <small>@Html.ValidationMessageFor(x => x.SignUpPassword)</small>
        </div>

        <div class="wrap-input100 validate-input" data-validate="Username is required">
            <div class="text-right input-title">
                @Html.DisplayNameFor(x => x.ConfirmPassword)
            </div>
            @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "input100 p-h-r", @data_trigger_click = "#btn-sign-up" })

        </div>
        <div class="w-full">
            <small>@Html.ValidationMessageFor(x => x.ConfirmPassword)</small>
        </div>

        <div class="wrap-input100 validate-input hide" data-validate="Username is required">
            <div class="text-right input-title">
                @Html.DisplayNameFor(x => x.ReferralCode) : این فیلد اختیاری می باشد
            </div>
            @Html.TextBoxFor(x => x.ReferralCode, new { @class = "input100 p-h-r", @data_trigger_click = "#btn-sign-up" })
        </div>

        <div class="container-login100-form-btn">
            <button class="btn-action rtl waves-effect btn-sign-up" type="button" id="btn-sign-up">
                <div class="text">
                    @LocalMessage.SignUp
                </div>
                <div class="icon">
                    <i class="zmdi zmdi-account-add"></i>
                </div>
            </button>
        </div>
    </form>
    <div class="footer">
        قبلا در رسمی آنلاین ثبت ‌نام کرده‌اید؟ 

        <a href="#signin-form" class="inner-nav goto-sign-in">وارد شوید</a>

    </div>
</div>